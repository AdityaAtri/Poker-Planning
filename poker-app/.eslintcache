[{"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\CreateRoom\\CreateRoom.jsx":"1","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\LandingPage\\HostLandingPage.jsx":"2","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\RegisterEmp\\RegisterEmp.jsx":"3","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\LandingPage\\LandingPage.jsx":"4","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\EnterExistingRoom\\EnterExistingRoom.jsx":"5","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\reportWebVitals.js":"6","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\App.js":"7","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\Resuable\\Input.jsx":"8","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\LandingPage\\ParticipantLandingPage.jsx":"9","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\index.js":"10"},{"size":2874,"mtime":1606908396047,"results":"11","hashOfConfig":"12"},{"size":17749,"mtime":1607330101057,"results":"13","hashOfConfig":"12"},{"size":2535,"mtime":1606978782012,"results":"14","hashOfConfig":"12"},{"size":2472,"mtime":1606441123365,"results":"15","hashOfConfig":"12"},{"size":2652,"mtime":1606976189552,"results":"16","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"12"},{"size":1162,"mtime":1606746500504,"results":"18","hashOfConfig":"12"},{"size":1601,"mtime":1606306238231,"results":"19","hashOfConfig":"12"},{"size":9640,"mtime":1607001084732,"results":"20","hashOfConfig":"12"},{"size":501,"mtime":1606453883056,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"15xcavf",{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\CreateRoom\\CreateRoom.jsx",["46"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Formsy from \"formsy-react\";\r\nimport Input from \"../Resuable/Input\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from 'react-router'\r\n\r\nclass CreateRoom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    submit = (event) => {\r\n\r\n        const passingData = event;\r\n        console.log(passingData);\r\n        axios.post(\"http://localhost:5000/planningpoker/createroom\", event, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((event) => {\r\n                alert(\"Room Created\");\r\n                this.props.history.push({\r\n                    pathname: '/poker-room/' + passingData.roomId + \"/\" + passingData.hostId,\r\n                    state: { passingData }\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                alert(\"Room Not Created : Either Room is already created or HostId not registered\");\r\n            });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div\r\n                    className=\"container-fluid mt-5\"\r\n                    id=\"main\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                >\r\n                    <div className=\"col-md-4 mb-2 ml-auto mr-auto\">\r\n                        <div className=\"p-3 mb-2 bg-primary text-white\">\r\n                            Create Room\r\n                        </div>\r\n                        <Formsy onSubmit={this.submit} onChange={this.handleInputChange}>\r\n                            <Input\r\n                                name=\"hostId\"\r\n                                id=\"hId\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter the Host Oracle ID\"\r\n                                label=\"Host Oracle ID\"\r\n                                required={true}\r\n                            />\r\n                            <Input\r\n                                name=\"roomId\"\r\n                                id=\"rId\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter the Room ID\"\r\n                                label=\"Planning Room ID\"\r\n                                required={true}\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                id=\"submit-btn\"\r\n                                className=\"btn btn-outline-primary\"\r\n                            >\r\n                                Create\r\n                            </button>\r\n                        </Formsy>\r\n                    </div >\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateRoom);\r\n",["47","48"],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\LandingPage\\HostLandingPage.jsx",["49","50","51","52","53"],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\RegisterEmp\\RegisterEmp.jsx",["54"],"import React, { Component } from \"react\";\r\nimport Formsy from \"formsy-react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Input from \"../Resuable/Input\";\r\nimport axios from \"axios\";\r\n\r\nclass EnterExistingRoom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    submit = (model) => {\r\n        console.log(model);\r\n        axios.post(\"http://localhost:5000/planningpoker/register\", model, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((model) => {\r\n                alert(\"Employee Created\");\r\n                this.props.history.push({\r\n                    pathname: '/PokerPlanning'\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                alert(\"Employee Already Created\");\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div\r\n                    className=\"container-fluid mt-5\"\r\n                    id=\"main\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                >\r\n                    <div className=\"col-md-4 mb-2 ml-auto mr-auto\">\r\n                        <div className=\"p-3 mb-2 bg-primary text-white\">\r\n                            Register Yourself\r\n                        </div>\r\n                        <Formsy onValidSubmit={this.submit}>\r\n                            <Input\r\n                                name=\"empOracleId\"\r\n                                id=\"empOracleId\"\r\n                                placeholder=\"Enter Employee Oracle ID\"\r\n                                label=\"Oracle ID\"\r\n                                required\r\n                            ></Input>\r\n                            <Input\r\n                                name=\"empName\"\r\n                                id=\"empName\"\r\n                                placeholder=\"Enter Your Name\"\r\n                                label=\"Name\"\r\n                                required\r\n                            ></Input>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                id=\"submit-btn\"\r\n                                className=\"btn btn-outline-primary\"\r\n                            >\r\n                                Register\r\n                            </button>\r\n                        </Formsy>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnterExistingRoom;\r\n","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\LandingPage\\LandingPage.jsx",[],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\EnterExistingRoom\\EnterExistingRoom.jsx",["55"],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\reportWebVitals.js",[],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\App.js",[],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\Resuable\\Input.jsx",[],"C:\\PokerPlanning\\PokerProject\\poker-app\\src\\Components\\LandingPage\\ParticipantLandingPage.jsx",["56","57"],"import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from \"axios\";\r\nimport Formsy from \"formsy-react\";\r\nimport Input from \"../Resuable/Input\";\r\n\r\nclass ParticipantLandingPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const roomId = this.props.location.state.passingData.roomId;\r\n        const empId = this.props.location.state.passingData.empId;\r\n        this.state = {\r\n            empId, roomId, roomDetails: [], hostName: '', participantName: ''\r\n        }\r\n        this.leaveRoom = this.leaveRoom.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:5000/planningpoker/gethostprofiledetails/\" + this.state.empId).then((res) => {\r\n            this.setState({ participantName: res.data });\r\n        });\r\n        axios.get(\"http://localhost:5000/planningpoker/gethostname/\" + this.state.roomId).then((res) => {\r\n            this.setState({ hostName: res.data });\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        axios.get(\"http://localhost:5000/planningpoker/getroomdetails/\" + this.state.roomId).then((res) => {\r\n            this.setState({ roomDetails: res.data });\r\n            console.log(this.state.roomDetails)\r\n        });\r\n    }\r\n\r\n    isPerfectSquare(x) {\r\n        return x > 0 && Math.sqrt(x) % 1 === 0;\r\n    }\r\n\r\n    isFibonacci(n) {\r\n        const x1 = 5 * n * n + 4;\r\n        const x2 = 5 * n * n - 4;\r\n        var result1 = this.isPerfectSquare(x1);\r\n        var result2 = this.isPerfectSquare(x2);\r\n        var result = Boolean(result1 == true || result2 == true);\r\n        return result;\r\n    }\r\n\r\n    submit = (model) => {\r\n\r\n        const passingNumberChoosen = model.numberchoosen;\r\n        var number = parseInt(passingNumberChoosen);\r\n\r\n        if (this.isFibonacci(number)) {\r\n            const passingRoomId = this.state.roomId;\r\n            const passingEmpId = this.state.empId;\r\n            axios.post(\"http://localhost:5000/planningpoker/putStorypointestimation\", { numberChoosen: passingNumberChoosen, empId: passingEmpId, roomId: passingRoomId }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then((model) => {\r\n                    alert(\"Story Point Decided\");\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"Story Point Not Passed\");\r\n                });\r\n        }\r\n        else {\r\n            alert(\"Entered Number Is Not Fibonacci One :(\");\r\n        }\r\n    };\r\n\r\n    leaveRoom() {\r\n        const passingRoomId = this.state.roomId;\r\n        const passingEmpId = this.state.empId;\r\n        axios.delete(\"http://localhost:5000/planningpoker/leaveroom/\" + passingRoomId + \"/\" + passingEmpId, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((model) => {\r\n                alert(\"Room Left\");\r\n                this.props.history.push({\r\n                    pathname: '/PokerPlanning'\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                alert(\"Room Not Left\");\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid mt-2 md-2\" >\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10 ml-auto mr-auto\">\r\n                        <h1 style={{ color: \"#0275d8\" }}>Story Point Estimation</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-5 mt-2 ml-auto mr-auto\">\r\n                        <div className=\"card\">\r\n                            <h3\r\n                                className=\"card-header text-left\"\r\n                                style={{ color: \"#0275d8\", borderLeft: \"5px solid #0275d8\" }}\r\n                            >\r\n                                Room Details\r\n                            </h3>\r\n                            <div className=\"card-body align-items-center\">\r\n                                <img\r\n                                    src=\"https://i.imgur.com/iwpQi9G.png\"\r\n                                    alt=\"participant\"\r\n                                    style={{ width: \"150px\", alignContent: \"center\" }}\r\n                                />\r\n                                {this.state.roomDetails.map((e) => {\r\n                                    return (\r\n                                        <div className=\"card card-text mt-2 md-3 pd-4 pt-1 ml-auto\">\r\n                                            <h6 className=\"mb-0\">\r\n                                                <b>{(\"Planning Room ID\")}</b>\r\n                                            </h6>\r\n                                            <span className=\"text-capitalize\">\r\n                                                {e.roomId}\r\n                                            </span>\r\n                                            <h6 className=\"mb-0\">\r\n                                                <b>{(\"Host Oracle ID\")}</b>\r\n                                            </h6>\r\n                                            <span className=\"text-capitalize\">\r\n                                                {e.hostId}\r\n                                            </span>\r\n                                            <h6 className=\"mb-0\">\r\n                                                <b>{(\"Participant Name\")}</b>\r\n                                            </h6>\r\n                                            <span className=\"text-capitalize\">\r\n                                                {this.state.participantName}\r\n                                            </span>\r\n                                            <h6 className=\"mb-0\">\r\n                                                <b>{(\"Host Name\")}</b>\r\n                                            </h6>\r\n                                            <span className=\"text-capitalize\">\r\n                                                {this.state.hostName}\r\n                                            </span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                                <br></br>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-outline-primary\"\r\n                                    onClick={this.leaveRoom}>\r\n                                    <span>Leave Room</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-5 mt-2 ml-auto mr-auto\">\r\n                        <div className=\"card\">\r\n                            <h3\r\n                                className=\"card-header text-left\"\r\n                                style={{\r\n                                    color: \"#0275d8\",\r\n                                    borderLeft: \"5px solid #0275d8\",\r\n                                }}\r\n                            >\r\n                                Story To Be Discussed\r\n                            </h3>\r\n                            <div className=\"card-body  align-items-center\">\r\n                                {this.state.roomDetails.map((e) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <h6 className=\"mb-0 mt-2\">\r\n                                                <b>{(\"Story ID\")}</b>\r\n                                            </h6>\r\n                                            <span>{e.storyId}</span>\r\n                                            <br></br>\r\n                                            <h6 className=\"mb-0 mt-2\">\r\n                                                <b>{(\"Story Description\")}</b>\r\n                                            </h6>\r\n                                            <span>{e.story}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <div className=\"form-signin container-fluid mt-2\">\r\n                            <div className=\"col-md-4 mb-2 ml-auto mr-auto\">\r\n                            </div>\r\n                            <Formsy onSubmit={this.submit}>\r\n                                <Input\r\n                                    name=\"numberchoosen\"\r\n                                    id=\"numberchoosenId\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the story point estimation\"\r\n                                    label=\"Story Point\"\r\n                                    required={true}\r\n                                />\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    id=\"submit-btn\"\r\n                                    className=\"btn btn-outline-primary\"\r\n                                >\r\n                                    Submit\r\n                            </button>\r\n                            </Formsy>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ParticipantLandingPage;","C:\\PokerPlanning\\PokerProject\\poker-app\\src\\index.js",[],{"ruleId":"58","severity":1,"message":"59","line":10,"column":5,"nodeType":"60","messageId":"61","endLine":12,"endColumn":6},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":50,"column":38,"nodeType":"68","messageId":"69","endLine":50,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":50,"column":57,"nodeType":"68","messageId":"69","endLine":50,"endColumn":59},{"ruleId":"70","severity":1,"message":"71","line":85,"column":37,"nodeType":"72","messageId":"73","endLine":85,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":96,"column":23,"nodeType":"68","messageId":"69","endLine":96,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":97,"column":23,"nodeType":"68","messageId":"69","endLine":97,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":9,"column":5,"nodeType":"60","messageId":"61","endLine":11,"endColumn":6},{"ruleId":"58","severity":1,"message":"59","line":9,"column":5,"nodeType":"60","messageId":"61","endLine":11,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":43,"column":38,"nodeType":"68","messageId":"69","endLine":43,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":43,"column":57,"nodeType":"68","messageId":"69","endLine":43,"endColumn":59},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]